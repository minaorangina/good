* make sure the instance on digitalocean is FAT

* find out how to run ipfs via docker (I know this is possible)

* run ipfs on the digitalocean instance

* update c-name to ipfs.ralphtheninja.info for this instance

* build leveldown (or OTHER native modules in the future) binaries (huge step) for a set of node platforms and a set of operating systems



* make sure we can build binaries and put them to github. how does mafintosh handle this?

* it seems node-pre-gyp (which takes over during install phase) matches the os AND the current version of node, so this means quite a lot of combinations, e.g. we would have to build the binaries for a set of different node platforms, e.g. at least the following:

 * latest 0.10 which today is 0.10.38
 * latest 0.12 which today is 0.12.4
 * latest iojs which today is v2.1.0 (node version 44)

* write down steps for building a new release .. can we automate and/or simplify this step? e.g. by a script or whatever

* use the steps above to document how node-pre-gyp works for leveldown in a separate markdown file, link to it from the README

* setup different environments that can build binaries

* we can publish to s3 to start with

* sign the binaries with the private key of the builder

* use ipfs to store the binaries and use node-pre-gyp to download them from ipfs .. note that we can use a fork of node-pre-gyp .. is this possible? it would have to be done via http somehow if the user is required to have ipfs installed locally

